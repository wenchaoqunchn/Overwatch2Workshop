规则("outline devs who made or edited this mode, using random colors")
{
	事件
	{
		持续 - 每名玩家;
		队伍1;
		全部;
	}

	条件
	{
		事件玩家.isDev == 真;
		事件玩家.rainbowOff == 假;
	}

	动作
	{
		开始强制设置玩家轮廓(事件玩家, 所有玩家(所有队伍), 真, 自定义颜色(随机实数(0, 255), 随机实数(0, 255), 随机实数(0, 255), 255), 总是);
		等待(0.128, 无视条件);
		如条件为“真”则循环;
	}
}

规则("devs can toggle rainbow effect")
{
	事件
	{
		持续 - 每名玩家;
		队伍1;
		全部;
	}

	条件
	{
		事件玩家.isDev == 真;
		按钮被按下(事件玩家, 按钮(终极技能)) == 真;
		按钮被按下(事件玩家, 按钮(互动)) == 真;
	}

	动作
	{
		事件玩家.rainbowOff = 事件玩家.rainbowOff ? 假 : 真;
		停止强制设置玩家轮廓(事件玩家, 所有玩家(所有队伍));
		小字体信息(事件玩家, 自定义字符串("dev rainbow {0}", 事件玩家.rainbowOff ? 自定义字符串("off") : 自定义字符串("on")));
	}
}

规则("outline winners in green periodically")
{
	事件
	{
		持续 - 每名玩家;
		队伍1;
		全部;
	}

	条件
	{
		事件玩家.isWinner != 假;
		存活(事件玩家) == 真;
	}

	动作
	{
		等待(服务器负载平均值 / 100, 无视条件);
		开始强制设置玩家轮廓(事件玩家, 所有玩家(队伍1), 真, 颜色(绿色), 总是);
		等待(30, 当为“真”时重新开始);
		如条件为“真”则循环;
	}
}

规则("outline winners for new players as soon as they join")
{
	事件
	{
		玩家加入比赛;
		队伍1;
		全部;
	}

	条件
	{
		对任意为“真”(所有玩家(队伍1), 当前数组元素.isWinner) == 真;
	}

	动作
	{
		等待(服务器负载平均值 / 100, 无视条件);
		开始强制设置玩家轮廓(已过滤的数组(所有玩家(队伍1), 当前数组元素.isWinner), 事件玩家, 真, 颜色(绿色), 总是);
	}
}



规则("stop outline for non-winners")
{
	事件
	{
		持续 - 每名玩家;
		队伍1;
		全部;
	}

	条件
	{
		(事件玩家.isWinner || 事件玩家.isDev) == 假;
	}

	动作
	{
		等待(服务器负载平均值 / 100, 无视条件);
		停止强制设置玩家轮廓(事件玩家, 所有玩家(队伍1));
	}
}